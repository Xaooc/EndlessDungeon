from random import randint, choice


from Dungeons.result import Result


class Events:
    def __init__(self):
        self.mob = ['Быстриет', 'Волк', 'Гигантская лягушка', 'Гигантская многоножка', 'Гигантская ядовитая змея',
               'Гигантский барсук', 'Гигантский паук-волк', 'Глубинные роф', 'Грязевой мефит', 'Диметродон',
               'Диметродон зомби', 'Дуодрон', 'Дымовой мефит', 'Жёлтый мускусный зомби', 'Живая метла атаки',
               'Зомби', 'Икситксачитл', 'Иссохший Гнолл', 'Кабан', 'Космический хряк', 'Летающий меч', 'Мерзость',
               'Пантера', 'Паровой мефит', 'Пепельный Зомби', 'Пидлуик II', 'Птеранодон', 'Птеранодон зомби',
               'Реплика Дуодрона', 'Рой немиколоптеров зомби', 'Самец стидера', 'Серый поглотитель', 'Скелет',
               'Снежный кот', 'Чудище звёздных порождений', 'Амфисбена', 'Гигантская оса', 'Долгрим', 'Зорбо',
               'Кальмароголовый гном', 'Космический угорь', 'Куролиск', 'Ледяной мефит', 'Магмин',
               'Магмовый мефит',
               'Пронзатель', 'Пылевой мефит', 'Ржавник', 'Рифовая акула', 'Ссуран-отравитель', 'Тёмная мантия',
               'Тень',
               'Тридрон', 'Хитин', 'Человекообразная обезьяна', 'Чёрный медведь', 'Алдани', 'Бескостный',
               'Бронзовый скаут',
               'Бронзовый соболь', 'Гарпия', 'Гипнос-магин', 'Дейноних', 'Дейноних зомби', 'Дилофозавр',
               'Дилофозавр зомби',
               'Душитель', 'Железный защитник', 'Живая горящая рука', 'Зомби Страда']



        self.events = {
                1: {
                    'move': 'Попытаться открыть дверь',
                    'description': 'Вы подходите к двери и пытаетесь взломать замок. На это потребуется некоторое время...',
                    'time': randint(10, 20) * 60,
                    'type': 'dex',
                    'difficulty': randint(13, 18),
                    'result': [
                        {
                            1: ['В замке оказывается ловушка! Но вам удалось пройти дальше.',
                                f'Вы вскрываете замок слишком шумно и привлекаете внимание. На вас из засады нападает {choice(self.mob)}! Во время потасовки вы своим телом вышибаете дверь. С трудом вам удалось победить. Дверь, кстати, теперь совсем не мешает.',
                                'Вам так и не удаётся открыть замок и вы решаете выбить её плечом. Ну.. Дверь выбита. Впрочем, как и ваше плечо',
                                'Хм..почему этот замок такой липкий? О нет, это же мимик! Пока ты стряхивал его с руки, он успел тебя покусать. Зато путь теперь открыт']
                        },
                        {
                            0: ['Вы открываете замок и проходите дальше',
                                'Замок падает на пол после нескольких манипуляций с отмычками. Дверь открыта и вы движетесь дальше.',
                                'Хм..Кажется, замок и не был заперт. Чего вы тогда всё это время ковырялись? Надо двигаться дальше.',
                                'Замок был настолько трухлявым, что он буквально рассыпался от вашего касания. Ничто не мешает теперь двигаться дальше.'
                                ],
                            4: [
                                'А замок то инкрустирован камнями. Странно это, но камни можно и продать. Всё равно вам удалось его вскрыть, так что чего добру пропадать, верно? А потом пора двигаться дальше.',
                                'Замок взломан. Когда вы пытаетесь открыть дверь, замечаете, что что-то мешает на её пути. Кажется, кто-то обронил кошелёк. Вам то он точно нужнее. Теперь ничто не мешает двигаться дальше',
                                'Пока вы вскрывали замок, заметили, что в стене рядом есть какая-то выемка. Заглянув в неё обнаружили там горсть монет. Кто бы их тут не оставил, вряд ли они ему нужны. Замок взломан. Пора двигаться дальше.'
                                ]
                        }
                    ]
                },
                2: {
                    'move': 'Спуститься вниз по лестнице',
                    'description': f'Вы спускаетесь по лестнице вниз. Спустившись, вы начинаете осматривать окружение. '
                                   f'Где-то в углу мелькает тень и внезапно на вас выпрыгивает {choice(self.mob)}'
                                   f'Начинается сражение...',
                    'time': randint(5, 10) * 60,
                    'type': 'con',
                    'difficulty': randint(15, 18),
                    'result': [
                        {
                            1: ['Сражение было тяжелым. Раны теперь у вас тоже тяжелые...'
                                'Пропустив несколько ударов, вы сбегаете от драки и прячетесь от монстра в другой комнате',
                                'Вы добили эту тварь! Получили от неё, правда, хорошенько. Итак, где вы оказались?',
                                '',
                                ''],
                            0: ['',
                                '',
                                '',
                                '',
                                '']
                        },
                        {
                            4: [''
                                '',
                                '',
                                '',
                                ''],
                            3: ['',
                                '',
                                '',
                                '',
                                ''],
                            0: ['',
                                '',
                                '',
                                '',
                                '']
                        }
                    ]
                }
            }


async def get_result(event: int, con: int, dex: int, mnd: int) -> dict:
    mod = 0
    events = Events().events
    if events.get(event).get('type') == 'con':
        mod = (con - 10) // 2
    if events.get(event).get('type') == 'dex':
        mod = (dex - 10) // 2
    if events.get(event).get('type') == 'mnd':
        mod = (mnd - 10) // 2
    roll = randint(1, 20) + mod
    # получаем результат броска
    fin = roll > events.get(event).get('difficulty')
    # выбираем случайный результат в зависимости от броска
    result = choice(list(events.get(event).get('result')[fin].keys()))
    # выбираем случайное описание полученного результата
    description = choice(events.get(event).get('result')[fin].get(result))
    time = events.get(event).get('time')
    msg = events.get(event).get('description')
    info_result = Result(events.get(event).get('difficulty'), result)
    info = await info_result.get_result()
    return {'result': result, 'description': description+info.get('description'), 'time': time,
            'effect': info.get('effect'), 'type': info.get('type'), 'msg': msg}


async def get_button(evnt: list) -> list:
    events = Events().events
    return [events[i].get('move') for i in evnt]


async def get_id(evnt: list) -> dict:
    events = Events().events
    return {events[i].get('move'): i for i in evnt}

a = Events()

